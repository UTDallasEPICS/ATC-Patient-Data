generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// types of employees
enum Role {
  ADMIN
  TECH
  BCBA
}

// types of behavior data
enum BehaviorType {
  TRIAL           // BOOLEAN
  PROBE           // COUNT
  DURATION        // BOOLEAN_ARRAY
  FREQUENCY       // COUNT_ARRAY
}

model User {
  userId          Int              @id @default(autoincrement())
  email           String           @unique
  firstName       String
  lastName        String
  phoneNumber     String?
  EmployeeProfile EmployeeProfile?
  StudentProfile  StudentProfile?
  archive         Boolean          @default(false)
}

model EmployeeProfile {
  employeeId Int              @id
  role       Role             @default(TECH)
  Students   StudentProfile[]
  User       User             @relation(fields: [employeeId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  Sessions    Session[]
}

model StudentProfile {
  studentId       Int             @id
  employeeId      Int             @unique
  birthday        DateTime
  Behaviors       Behavior[]
  User            User            @relation(fields: [studentId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  EmployeeProfile EmployeeProfile @relation(fields: [employeeId], references: [employeeId], onDelete: Restrict, onUpdate: Cascade)
  Sessions         Session[]
}

model Behavior {
  behaviorId      Int              @id @default(autoincrement())
  title           String    //meant to be technical jargon which will be easy to query in a search bar for end-user
  desc            String
  dataType        BehaviorType
  studentId       Int
  behaviorTempId  Int?
  Student         StudentProfile   @relation(fields: [studentId], references: [studentId])
  BehaviorTempRel BehaviorTemplate @relation(fields: [behaviorTempId], references: [behaviorTempId])
  archive         Boolean          @default(false)
  BehaviorData    BehaviorData[]
}

model BehaviorTemplate {
  behaviorTempId Int        @id @default(autoincrement())
  title          String
  desc           String
  dataType       String
  archive        Boolean    @default(false)
  Behavior       Behavior[]
}

model Session {
  sessionId  Int             @id @default(autoincrement())
  Data       BehaviorData[]
  studentId  Int             @unique
  employeeId Int             @unique
  createdAt  DateTime
  note       String
  Student    StudentProfile  @relation(fields: [studentId], references: [studentId], onUpdate: Cascade)
  Employee   EmployeeProfile @relation(fields: [employeeId], references: [employeeId], onUpdate: Cascade) //what are we doing onDelete?
}

model BehaviorData {
  bdataId    Int      @id @default(autoincrement())
  Session    Session  @relation(fields: [sessionId], references: [sessionId])
  Behaviour  Behavior @relation(fields: [behaviorId], references: [behaviorId])
  data       String // decode at load time based on Behaviour.dataType
  sessionId  Int
  behaviorId Int
}
