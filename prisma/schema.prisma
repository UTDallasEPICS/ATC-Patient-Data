// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Role {
  Admin
  Technician
  BCBA
}

// siwitched to the below to match up with the behavior types listed in 
// behavior/add.tsx line 124-127
enum Datatype {
  TRIAL
  PROBE
  DURATION
  FREQUENCY
}

// any lines containing the word "patient" have been replaced with "student"
model User {
  id              Int              @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String?          @unique
  phone_number    String?
  birthday        DateTime
  EmployeeProfile EmployeeProfile?
  StudentProfile  StudentProfile?
  Dependents      StudentProfile[] @relation("dependents")
  Sessions        Session[] 
  image           Image?
}

model EmployeeProfile {
  role     Role             @default(Technician)
  id       Int              @id @default(autoincrement())
  User     User             @relation(fields: [id], references: [id])
  Students StudentProfile[]
  Sessions Session[]
}

model StudentProfile {
  Guardians         User[]           @relation("dependents") //guardian relation many to many link to User table instead
  id                Int              @id @default(autoincrement())
  User              User             @relation(fields: [id], references: [id])
  Sessions          Session[]
  Program           Program[]
  EmployeeProfile   EmployeeProfile? @relation(fields: [employeeProfileId], references: [id])
  employeeProfileId Int?
}

model Behavior {
  id             Int      @id @default(autoincrement())
  name           String
  description    String
  datatype       Datatype @default(TRIAL)
  trialsPerEntry Int?
  entries        String[]
  tags           String[]
}

model Session {
  id          Int             @id @default(autoincrement())
  sessionTime DateTime
  data        Json
  studentId   Int
  employeeId  Int
  student     StudentProfile  @relation(fields: [studentId], references: [id])
  employee    EmployeeProfile @relation(fields: [employeeId], references: [id])
  User        User?           @relation(fields: [userId], references: [id])
  userId      Int?
}

model Program {
  id        Int            @id @default(autoincrement())
  studentId Int
  student   StudentProfile @relation(fields: [studentId], references: [id])
  behaviors Json           @default("[]")
}


// image model to hold user profile pictures
model Image{
  id        Int          @id @default(autoincrement())
  Image     String 
  userId    Int          @unique
  user      User         @relation(fields: [userId], references: [id]) 
}